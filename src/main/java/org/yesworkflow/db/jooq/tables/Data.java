/**
 * This class is generated by jOOQ
 */
package org.yesworkflow.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.yesworkflow.db.jooq.DefaultSchema;
import org.yesworkflow.db.jooq.Keys;
import org.yesworkflow.db.jooq.tables.records.DataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Data extends TableImpl<DataRecord> {

	private static final long serialVersionUID = 419399411;

	/**
	 * The reference instance of <code>data</code>
	 */
	public static final Data DATA = new Data();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DataRecord> getRecordType() {
		return DataRecord.class;
	}

	/**
	 * The column <code>data.id</code>.
	 */
	public final TableField<DataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data.name</code>.
	 */
	public final TableField<DataRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>data.qualified_name</code>.
	 */
	public final TableField<DataRecord, String> QUALIFIED_NAME = createField("qualified_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>data</code> table reference
	 */
	public Data() {
		this("data", null);
	}

	/**
	 * Create an aliased <code>data</code> table reference
	 */
	public Data(String alias) {
		this(alias, DATA);
	}

	private Data(String alias, Table<DataRecord> aliased) {
		this(alias, aliased, null);
	}

	private Data(String alias, Table<DataRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DataRecord> getPrimaryKey() {
		return Keys.PK_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DataRecord>> getKeys() {
		return Arrays.<UniqueKey<DataRecord>>asList(Keys.PK_DATA);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Data as(String alias) {
		return new Data(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Data rename(String name) {
		return new Data(name, null);
	}
}
