/**
 * This class is generated by jOOQ
 */
package org.yesworkflow.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.yesworkflow.db.jooq.DefaultSchema;
import org.yesworkflow.db.jooq.Keys;
import org.yesworkflow.db.jooq.tables.records.DataResourceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataResource extends TableImpl<DataResourceRecord> {

	private static final long serialVersionUID = 957548503;

	/**
	 * The reference instance of <code>data_resource</code>
	 */
	public static final DataResource DATA_RESOURCE = new DataResource();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DataResourceRecord> getRecordType() {
		return DataResourceRecord.class;
	}

	/**
	 * The column <code>data_resource.data_id</code>.
	 */
	public final TableField<DataResourceRecord, Integer> DATA_ID = createField("data_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data_resource.resource_id</code>.
	 */
	public final TableField<DataResourceRecord, Integer> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>data_resource</code> table reference
	 */
	public DataResource() {
		this("data_resource", null);
	}

	/**
	 * Create an aliased <code>data_resource</code> table reference
	 */
	public DataResource(String alias) {
		this(alias, DATA_RESOURCE);
	}

	private DataResource(String alias, Table<DataResourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private DataResource(String alias, Table<DataResourceRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<DataResourceRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<DataResourceRecord, ?>>asList(Keys.FK_DATA_RESOURCE_DATA_1, Keys.FK_DATA_RESOURCE_RESOURCE_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DataResource as(String alias) {
		return new DataResource(alias, this);
	}

	/**
	 * Rename this table
	 */
	public DataResource rename(String name) {
		return new DataResource(name, null);
	}
}
