/**
 * This class is generated by jOOQ
 */
package org.yesworkflow.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.yesworkflow.db.jooq.DefaultSchema;
import org.yesworkflow.db.jooq.Keys;
import org.yesworkflow.db.jooq.tables.records.AnnotationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Annotation extends TableImpl<AnnotationRecord> {

	private static final long serialVersionUID = 1462336447;

	/**
	 * The reference instance of <code>annotation</code>
	 */
	public static final Annotation ANNOTATION = new Annotation();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AnnotationRecord> getRecordType() {
		return AnnotationRecord.class;
	}

	/**
	 * The column <code>annotation.id</code>.
	 */
	public final TableField<AnnotationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>annotation.source_file_id</code>.
	 */
	public final TableField<AnnotationRecord, Integer> SOURCE_FILE_ID = createField("source_file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>annotation.qualifies</code>.
	 */
	public final TableField<AnnotationRecord, Integer> QUALIFIES = createField("qualifies", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>annotation.line_number</code>.
	 */
	public final TableField<AnnotationRecord, Integer> LINE_NUMBER = createField("line_number", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>annotation.tag</code>.
	 */
	public final TableField<AnnotationRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>annotation.keyword</code>.
	 */
	public final TableField<AnnotationRecord, String> KEYWORD = createField("keyword", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>annotation.value</code>.
	 */
	public final TableField<AnnotationRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>annotation.description</code>.
	 */
	public final TableField<AnnotationRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>annotation</code> table reference
	 */
	public Annotation() {
		this("annotation", null);
	}

	/**
	 * Create an aliased <code>annotation</code> table reference
	 */
	public Annotation(String alias) {
		this(alias, ANNOTATION);
	}

	private Annotation(String alias, Table<AnnotationRecord> aliased) {
		this(alias, aliased, null);
	}

	private Annotation(String alias, Table<AnnotationRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AnnotationRecord> getPrimaryKey() {
		return Keys.PK_ANNOTATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AnnotationRecord>> getKeys() {
		return Arrays.<UniqueKey<AnnotationRecord>>asList(Keys.PK_ANNOTATION);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AnnotationRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AnnotationRecord, ?>>asList(Keys.FK_ANNOTATION_SOURCE_FILE_1, Keys.FK_ANNOTATION_ANNOTATION_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Annotation as(String alias) {
		return new Annotation(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Annotation rename(String name) {
		return new Annotation(name, null);
	}
}
