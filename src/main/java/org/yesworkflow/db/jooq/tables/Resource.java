/**
 * This class is generated by jOOQ
 */
package org.yesworkflow.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.yesworkflow.db.jooq.DefaultSchema;
import org.yesworkflow.db.jooq.Keys;
import org.yesworkflow.db.jooq.tables.records.ResourceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Resource extends TableImpl<ResourceRecord> {

	private static final long serialVersionUID = -31632222;

	/**
	 * The reference instance of <code>resource</code>
	 */
	public static final Resource RESOURCE = new Resource();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ResourceRecord> getRecordType() {
		return ResourceRecord.class;
	}

	/**
	 * The column <code>resource.id</code>.
	 */
	public final TableField<ResourceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>resource.uri</code>.
	 */
	public final TableField<ResourceRecord, String> URI = createField("uri", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>resource</code> table reference
	 */
	public Resource() {
		this("resource", null);
	}

	/**
	 * Create an aliased <code>resource</code> table reference
	 */
	public Resource(String alias) {
		this(alias, RESOURCE);
	}

	private Resource(String alias, Table<ResourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Resource(String alias, Table<ResourceRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ResourceRecord> getPrimaryKey() {
		return Keys.PK_RESOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ResourceRecord>> getKeys() {
		return Arrays.<UniqueKey<ResourceRecord>>asList(Keys.PK_RESOURCE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Resource as(String alias) {
		return new Resource(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Resource rename(String name) {
		return new Resource(name, null);
	}
}
