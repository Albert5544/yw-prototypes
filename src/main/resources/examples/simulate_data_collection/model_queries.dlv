% MQ1:  Where is the definition of block simulate_data_collection.collect_data_set?
mq1(SourcePath, StartLine, EndLine) :-
    program_source("simulate_data_collection.collect_data_set", SourcePath, StartLine, EndLine).
    
% MQ2:  What is the name of the top-level workflow?
mq2(ProgramName) :-
    top_workflow(ProgramId),
    program(ProgramId, _, ProgramName, _, _).
    
% MQ3:  What are the names of any top-level functions?
mq3(ProgramName) :-
    function(ProgramId),
    not sub_program(ProgramId),
    program(ProgramId, _, ProgramName, _, _).

% MQ4:  What are the names of the programs comprising the top-level workflow?
mq4(ProgramName) :-
    top_workflow(TopWorkflowId),
    has_subprogram(TopWorkflowId, ProgramId),
    program(ProgramId, ProgramName, _, _, _).

% MQ5:  What are the inputs to the top-level workflow?
mq5(InputPortName) :-
    top_workflow(TopWorkflowId),
    has_in_port(TopWorkflowId, PortId),
    port(PortId, _, InputPortName, _, _, _).

% MQ6:  What data is output by program block simulate_data_collection.collect_data_set?
mq6(DataName) :-
    program(ProgramId, _, "simulate_data_collection.collect_data_set", _, _),
    has_out_port(ProgramId, PortId),
    port_data(PortId, DataName, _).
    
% MQ7: What program blocks provide input directly to simulate_data_collection.collect_data_set?
mq7(SourceProgramName) :-
    program(SinkProgramId, _, "simulate_data_collection.collect_data_set", _, _),
    has_in_port(SinkProgramId, InPortId),
    port_data(InPortId, _, Data),
    port_data(OutPortId, _, Data),
    has_out_port(SourceProgramId, OutPortId),
    program(SourceProgramId, _, SourceProgramName, _, _).

% MQ8: What programs have input ports that receive data simulate_data_collection[cassette_id]?
mq8(ProgramName) :-
    data(DataId, _, "simulate_data_collection[cassette_id]"),
    channel(ChannelId, DataId),
    port_connects_to_channel(PortId, ChannelId),
    has_in_port(ProgramId, PortId),
    program(ProgramId, _, ProgramName, _, _).

% MQ9: How many ports read data simulate_data_collection[frame_number]?
mq9(Count) :-
    program(WorkflowId, _, "simulate_data_collection", _, _),
    data(DataId, _, "simulate_data_collection[frame_number]"),
    data_in_port_count(WorkflowId, DataId, Count).

% MQ10: How many data are read by more than port in workflow simulate_data_collection?
mq10(Count) :- 
    Program(WorkflowId, _, "simulate_data_collection", _, _),
    #count{ D : data_read_by_multiple_ports(WorkflowId, D) } = Count.
data_read_by_multiple_ports(WorkflowId, DataId) :-
    data_in_port_count(WorkflowId, DataId, Count),
    Count > 1.

% MQ11: What program blocks are immediately downstream of calculate_strategy?
mq11(DownstreamProgramName) :-
    program(Program, _, "simulate_data_collection.calculate_strategy", _, _),
    program_immediately_downstream(Program, DownstreamProgram),
    program(DownstreamProgram, DownstreamProgramName, _, _, _).

% MQ12: What program blocks are immediately upstream of transform_images?
mq12(UpstreamProgramName) :-
    program(Program, _, "simulate_data_collection.transform_images", _, _),
    program_immediately_upstream(Program, UpstreamProgram),
    program(UpstreamProgram, UpstreamProgramName, _, _, _).

% MQ13: What program blocks are upstream of transform_images?
mq13(UpstreamProgramName):-
    program(Program, _, "simulate_data_collection.transform_images", _, _),
    program_upstream(Program, UpstreamProgram),
    program(UpstreamProgram, UpstreamProgramName, _, _, _).

% MQ14: What program blocks are anywhere downstream of calculate_strategy?
mq14(DownstreamProgramName):-
    program(Program, _, "simulate_data_collection.calculate_strategy", _, _),
    program_downstream(Program, DownstreamProgram),
    program(DownstreamProgram, DownstreamProgramName, _, _, _).

% MQ15: What data is immediately downstream of raw_image?
mq15(DownstreamData) :-
    data(DataId, "raw_image", _),
    data_immediately_downstream(DataId, DownstreamDataId),
    data(DownstreamDataId, DownstreamData, _).

% MQ16: What data is immediately upstream of raw_image?
mq16(UpstreamData) :-
    data(DataId, "raw_image", _),
    data_immediately_upstream(DataId, UpstreamDataId),
    data(UpstreamDataId, UpstreamData, _).

% MQ17: What data is downstream of accepted_sample?
mq17(DownstreamData):-
    data(DataId, "accepted_sample", _),
    data_downstream(DataId, DownstreamDataId),
    data(DownstreamDataId, DownstreamData, _).

% MQ18: What data is upstream of raw_image?
mq18(UpstreamData):-
    data(DataId, "raw_image", _),
    data_upstream(DataId, UpstreamDataId),
    data(UpstreamDataId, UpstreamData, _).
    

% MQ19: What URI variables are associated with writes of data simulate_data_collection[corrected_image]?
mq19(UriVariableName) :-
    data(DataId, _, "simulate_data_collection[corrected_image]"),
    channel(ChannelId, DataId),
    port_connects_to_channel(PortId, ChannelId),
    has_out_port(_, PortId),
    uri_variable(_, UriVariableName, PortId).    
        
% MQ_X:  What workflows call what functions?
%mq_x(WokflowName, FunctionName) :-
%    program(WorkflowId, WorkflowName, _, _, _),
%    program(FunctionId, FunctionName, _, _, _),
%    workflow(WorkflowId),
%    function(ProgramId),
%    calls(WorkflowId, FunctionId).
